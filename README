Using CoreCouchKit:

1. Add the project to your own project as a subproject
2. Add libCoreCouchKit.a as a Target Dependency, and drag it to the Link Binary With Libraries section, in the Build Phases tab of your application target. 
3. Add CoreCouchKit's folder recursively to your project's Header Search Paths in the Build Settings tab. 
4. Drag the CouchCocoa framework into your project's Frameworks group too.
5. Be sure you have the -ObjC flag in "Other Linker Flags" in your Build Settings tab.

Then, in your xcdatamodeld, you need to add the value 'document' for the key 'couchType' in your Entity's userInfo (in the Data Model Inspector tab of Xcode's Utilities pane with an Entity selected). Do this for each Entity type you want to become a syncable "Document" in Couch.

Now add to your app delegate:

#import "CoreCouchKit.h"

and in applicationDidFinishLaunching:
[CoreCouchKit setupWithContext:self.managedObjectContext serverURL:@"http://myserver.com:80" databaseName:@"my-database-name"];

and replace the usual NSManagedObjectModel creation with something like:
- (NSManagedObjectModel *)managedObjectModel
{
    if (__managedObjectModel != nil)
    {
        return __managedObjectModel;
    }
    NSURL *modelURL = [[NSBundle mainBundle] URLForResource:<#MyCouchAppName#> withExtension:@"momd"];
    __managedObjectModel = [CCManagedObjectModel couchManagedObjectModelWithContentsOfURL:modelURL];
    return __managedObjectModel;
}

Attachments:
Create an Entity that will represent the attachment and add it as a to-one relationship to your Document Entity. This matches well with the standard Core Data practice of keeping large data in a relationship. In the userInfo, fill in 4 fields: 
'documentType': 'attachment'
'dataProperty': <name of the transformable or data attribute holding your attachment's data>
'documentProperty': <name of the relationship that points back to the Document entity>
'contentType': <e.g. image/png>

If the property is transformable, it must have a proper Value Transformer set, as is usual. (see the Core Data Recipes sample code for an example with UIImageToDataTransformer).

***WARNING***
(disregard this if you're using the static library, as the project is already configured. but if you copy the files directly you'll have to do this...)
-fnoobjc-arc must be set (see http://developer.apple.com/library/ios/#releasenotes/ObjectiveC/RN-TransitioningToARC/_index.html) for CCManagedObjectModel in the CoreCouchKit project as it uses objc_allocateClassPair which doesn't yet support ARC, or else you'll get a crash during that function call.